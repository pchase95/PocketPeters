import java.util.*;
import java.io.*;
import java.net.*;

public class SSCH implements Runnable, PositionListener
{
	private ObjectInputStream in;
	private ObjectOutputStream out;
	private ArrayList<SSCH> clients;
	private PositionReceiver PR;
	private Peter peter;
	private int ID;
	
	public SSCH(Socket sock, ArrayList<SSCH> clients, Peter peter)
	{
		try
		{
			this.in = new ObjectInputStream(sock.getInputStream());
			this.PR = new PositionReceiver(in, this);
			this.out = new ObjectOutputStream(sock.getOutputStream());
			Thread t = new Thread(PR);
			t.start();
			this.clients = clients;
			this.peter = peter;
			this.ID = this.peter.getID();
		}
		catch(Exception e)
		{
			System.out.println("Unable to connect.");
		}	
	}
	
	public void run()
	{
		System.out.println("A new Peter is here");
	}
	
	public void movePeter(int newX, int newY, Peter p)
	{
		for(int i = 0; i < clients.size()-1; i++)
		{
			clients.get(i).sendCoords(newX, newY, p);
		}
	}
	
	private void sendCoords(int newX, int newY, Peter p)
	{
		try
		{
			if(p.getID() != ID)
				p.movePeter(newX, newY);
			out.writeUnshared(p);
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public void removeUser()
	{
		System.out.println("BYE BYE");
		clients.remove(this);
	}
	
	public Peter getPeter() { return this.peter; }
}
