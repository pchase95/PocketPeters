package packets;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.net.InetAddress;

import game.Client;
import game.Server;

public abstract class Packet implements Serializable {
	private static final long serialVersionUID = 1L;
	protected int ID;
	public Packet(int ID) {
		this.ID = ID;
	}

	public int getID() {
		return this.ID;
	}

	public static byte[] serialize(Object obj) throws IOException {
	    ByteArrayOutputStream out = new ByteArrayOutputStream();
	    ObjectOutputStream os = new ObjectOutputStream(out);
	    os.writeObject(obj);
	    return out.toByteArray();
	}
	
	public static Object deserialize(byte[] data) throws IOException, ClassNotFoundException {
	    ByteArrayInputStream in = new ByteArrayInputStream(data);
	    ObjectInputStream is = new ObjectInputStream(in);
	    return is.readObject();
	}
	
	//Create a packet from the Client
	public abstract void writeClient(Client client);
	//Create a packet from the Server
	public abstract void writeServer(Server server);
	//Read a packet in the Client
	public abstract void readClient(Client client);
	//Read a packet in the Server
	public abstract void readServer(Server server, InetAddress address, int port);
	//Returns senderID (do not use on login or ID packets)
}