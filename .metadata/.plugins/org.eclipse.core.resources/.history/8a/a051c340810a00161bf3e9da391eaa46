import java.io.*;
import java.net.*;
import java.util.*;

public class Server extends Thread {
	private List<ClientHandler> clients;
	private DatagramSocket socket;
	private Lobby lobby;
	
	public Server(Lobby lobby) {
		this.lobby = lobby;
		clients = new LinkedList<>();
		try {
			this.socket = new DatagramSocket(4324);
		}catch(SocketException e) {
			e.printStackTrace();
		}
	}
	
	public void run() {
		while(true) {
			byte[] data = new byte[1024];
			DatagramPacket packet = new DatagramPacket(data, data.length);
			try {
				socket.receive(packet);
			}catch(IOException e) {
				e.printStackTrace();
			}
			String msg = new String(packet.getData()).trim();
			addClient(packet.getAddress(), packet.getPort());
			System.out.printf("Client[Address:%s  Port:%d] said:%n%s%n", packet.getAddress().getHostAddress(), packet.getPort(), msg);
			sendData(msg.getBytes(), packet.getAddress(), packet.getPort());
		}
	}
	
	public void sendData(byte[] data, InetAddress ipAddress, int port) {
		DatagramPacket packet = new DatagramPacket(data, data.length, ipAddress, port);
		try {
			socket.send(packet);
		}catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	private void addClient(InetAddress address, int port) {
		for(ClientHandler client : clients) {
			
		}
	}
}

class ClientHandler  {
	InetAddress address;
	int port;
	ClientHandler(InetAddress address, int port) {
		this.address = address;
		this.port = port;
	}
}
